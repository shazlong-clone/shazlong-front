{"version":3,"file":"static/js/81.51bb8ed3.chunk.js","mappings":"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","sources":["components/Sign/SignLogo.js","components/DoctorSignUp/Image.js","components/DoctorSignUp/DocSignUpForm.js","components/DoctorSignUp/DoctorSignUpComp.js","pages/DoctorSignUp.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/images/shezlong-logo.svg';\nimport arLogo from '../../assets/images/Shezlong-Ar-Logos.png';\nimport { useTranslation } from 'react-i18next';\n\nfunction SignLogo() {\n  const { i18n } = useTranslation();\n  const locale = i18n.resolvedLanguage;\n  return (\n    <>\n      <div className=\"text-center\">\n        <Link to=\"/\">\n          <img width=\"70%\" src={locale === 'ar' ? arLogo : logo} alt=\"/\" />\n        </Link>\n      </div>\n    </>\n  );\n}\n\nexport default SignLogo;\n","import React from 'react';\nimport join from '../../assets/images/join-half-cover..png';\nimport { useTranslation } from 'react-i18next';\nfunction Image() {\n  const { t } = useTranslation();\n  return (\n    <>\n      <main className=\"relative hidden lg:block\">\n        <img\n          className=\"max-w-full  w-full  lg:h-screen lg:max-h-[100vh] object-cover object-right\"\n          src={join}\n          alt=\"undraw_sign_up\"\n        />\n        <article className=\"absolute top-0 left-0 bg-gray/20 h-full w-full text-white text-center\">\n          <h1 className=\"flex items-center h-full justify-center lg:max-w-lg lg:m-auto xl:w-full\">{t('Journy')}</h1>\n        </article>\n      </main>\n    </>\n  );\n}\n\nexport default Image;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Button, ButtonToolbar, Checkbox, Form, InputGroup, Message, Schema, useToaster } from 'rsuite';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport EyeIcon from '@rsuite/icons/legacy/Eye';\nimport EyeSlashIcon from '@rsuite/icons/legacy/EyeSlash';\nimport { Link } from 'react-router-dom';\nimport { FaLock } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport { signUpDoctor } from '../../features/auth/authAction';\nimport { useTranslation } from 'react-i18next';\n\nconst { Group, HelpText, Control } = Form;\nfunction DocSignUpForm() {\n  const { t } = useTranslation();\n  const [acceptLicence, setAcceptLicence] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [visibleConfirm, setVisibleConConfirm] = useState(false);\n\n  const model = Schema.Model({\n    name: Schema.Types.StringType().isRequired('This field is required.'),\n    email: Schema.Types.StringType().isRequired('This field is required.').isEmail('Please enter a valid email address.'),\n    password: Schema.Types.StringType().isRequired('This field is required'),\n    passwordConfirm: Schema.Types.StringType()\n      .isRequired('This field is required')\n      .addRule((value, data) => {\n        return value === data?.password;\n      }, 'password and password Confirm Not Equal'),\n  });\n  const formRef = useRef();\n\n  const [formValue, setFormValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirm: '',\n  });\n  const [loading, setLoading] = useState();\n  const toaster = useToaster();\n  const dispatch = useDispatch();\n  const onSubmit = async () => {\n    if (!formRef.current.check()) return;\n    try {\n      setLoading(true);\n      const res = await dispatch(signUpDoctor(formValue));\n      if (res.payload.status) {\n        toaster.push(\n          <Message type=\"success\" closable showIcon>\n            {t('signed_up_success')}\n          </Message>,\n          { duration: 2000 },\n        );\n        localStorage.setItem('doctorVerificationCode', res.payload.code);\n      } else {\n        toaster.push(\n          <Message type=\"error\" closable showIcon>\n            {res.payload.message}\n          </Message>,\n          { duration: 2000 },\n        );\n      }\n    } catch (err) {\n      toaster.push(\n        <Message closable showIcon type=\"error\">\n          {t('internal_server_error')}\n        </Message>,\n        {\n          duration: 5000,\n        },\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    AOS.init();\n  }, []);\n  return (\n    <>\n      <Form ref={formRef} formValue={formValue} onChange={setFormValues} model={model} fluid className=\"mt-5 sign-form\">\n        <Group controlId=\"name\">\n          <Control size=\"lg\" placeholder={t('Name') + '*'} name=\"name\" block=\"true\" />\n          <HelpText>{t('Name_Helper_Text')}</HelpText>\n        </Group>\n        <Group controlId=\"email\">\n          <Control size=\"lg\" block=\"true\" placeholder={t('Email') + '*'} name=\"email\" />\n        </Group>\n        <Group controlId=\"password\">\n          <InputGroup>\n            <Control size=\"lg\" name=\"password\" placeholder={t('Password') + '*'} type={visible ? 'text' : 'password'} />\n            <InputGroup.Button onClick={() => setVisible(!visible)}>{visible ? <EyeIcon /> : <EyeSlashIcon />}</InputGroup.Button>\n          </InputGroup>\n        </Group>\n        <Group controlId=\"passwordConfirm\">\n          <InputGroup accepter={InputGroup}>\n            <Control\n              placeholder={t('Password_Confirm') + '*'}\n              size=\"lg\"\n              name=\"passwordConfirm\"\n              type={visibleConfirm ? 'text' : 'password'}\n            />\n            <InputGroup.Button onClick={() => setVisibleConConfirm(!visibleConfirm)}>\n              {visibleConfirm ? <EyeIcon /> : <EyeSlashIcon />}\n            </InputGroup.Button>\n          </InputGroup>\n        </Group>\n\n        <Group controlId=\"acceptLicence\" className=\"ml-[-10px]\">\n          <Control\n            onChange={(val, checked) => {\n              setAcceptLicence(checked);\n            }}\n            accepter={Checkbox}\n            name=\"acceptLicence\"\n          >\n            {t('I_Agree_With_The')}\n            <Link to=\"/licence\" className=\"underline\">\n              {t('Privacy_Policy')}\n            </Link>\n          </Control>\n        </Group>\n        <Group controlId=\"submit\">\n          <ButtonToolbar>\n            <Button\n              disabled={!acceptLicence || loading}\n              onClick={onSubmit}\n              appearance=\"primary\"\n              type=\"submit\"\n              block\n              loading={loading}\n              startIcon={<FaLock />}\n            >\n              <strong className=\"pb-[1px] mx-[2px]\">{t('Sign_Up')}</strong>\n            </Button>\n          </ButtonToolbar>\n        </Group>\n        <div className=\"text-center mt-[-10px]\">\n          <Link to=\"/sign-in\" className=\"underline\">\n            {t('Sign_In')}\n          </Link>\n        </div>\n      </Form>\n    </>\n  );\n}\n\nexport default DocSignUpForm;\n","import React, { createContext } from 'react';\nimport Image from './Image';\nimport SignLogo from '../Sign/SignLogo';\nimport DocSignUpForm from './DocSignUpForm';\nimport { BsFillPatchCheckFill } from 'react-icons/bs';\nimport { Button } from 'rsuite';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport i18next from 'i18next';\nexport const SignUpCompContext = createContext();\nfunction SignUpComp() {\n  const { t } = useTranslation();\n  const { doctorVerificationCode } = useSelector((state) => state?.auth);\n  return (\n    <main className=\"lg:px-0 lg:w-full\">\n      <div className=\"lg:grid lg:grid-cols-[1fr_1.5fr] items-start\">\n        {!doctorVerificationCode ? (\n          <section data-aos=\"fade-up\" data-aos-duration=\"1000\" className=\"mb-5 mx-auto lg:max-w-sm py-10 container\">\n            <SignLogo />\n            <strong className=\"mt-8 block text-cyan text-center\">\n              {t('Registration_Step')}\n              {i18next.resolvedLanguage === 'ar' ? ` ${(3).toLocaleString('ar-EG')}/${(1).toLocaleString('ar-EG')}` : '1/3'}\n            </strong>\n            <strong className=\"mt-4 block text-center\">{t('All_fields_marked_with_*_are_required')}</strong>\n            <DocSignUpForm />\n          </section>\n        ) : (\n          <section className=\"text-center flex h-[100vh] items-center flex-col justify-center font-[500]\">\n            <article className=\"text-green text-[30px]\">\n              <BsFillPatchCheckFill />\n            </article>\n            <article>{t('First_Step_Done')}</article>\n            <article className=\"my-5\">{t('First_Step')}</article>\n            <Link to=\"/therapist-verify-email-registration\">\n              <Button appearance=\"primary\" color=\"green\">\n                {t('Continue')}\n              </Button>\n            </Link>\n          </section>\n        )}\n        <section>\n          <Image />\n        </section>\n      </div>\n    </main>\n  );\n}\n\nexport default SignUpComp;\n","import React from 'react';\nimport FooterNav from '../components/Shared/SideNav';\nimport DoctorSignUpComp from '../components/DoctorSignUp/DoctorSignUpComp';\nfunction DoctorSignUp() {\n  return (\n    <main className=\"bg-gray/5 min-h-[100vh]  pb-[74px] md:pb-0\">\n      <DoctorSignUpComp />\n      <FooterNav />\n    </main>\n  );\n}\n\nexport default DoctorSignUp;\n"],"names":["i18n","useTranslation","locale","resolvedLanguage","_jsx","_Fragment","children","className","Link","to","width","src","arLogo","logo","alt","t","_jsxs","join","Group","HelpText","Control","Form","acceptLicence","setAcceptLicence","useState","visible","setVisible","visibleConfirm","setVisibleConConfirm","model","Schema","name","isRequired","email","isEmail","password","passwordConfirm","addRule","value","data","formRef","useRef","formValue","setFormValues","loading","setLoading","toaster","useToaster","dispatch","useDispatch","useEffect","AOS","ref","onChange","fluid","controlId","size","placeholder","block","InputGroup","type","onClick","EyeIcon","EyeSlashIcon","accepter","val","checked","Checkbox","ButtonToolbar","Button","disabled","async","current","check","res","signUpDoctor","payload","status","push","Message","closable","showIcon","duration","localStorage","setItem","code","message","err","appearance","startIcon","FaLock","doctorVerificationCode","useSelector","state","auth","BsFillPatchCheckFill","color","SignLogo","i18next","concat","toLocaleString","DocSignUpForm","Image","DoctorSignUpComp","FooterNav"],"sourceRoot":""}